import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Disclosure, DisclosureButton, DisclosurePanel, Menu, MenuItems, MenuItem, } from '@headlessui/react';
import { Bars3Icon, XMarkIcon } from '@heroicons/react/24/outline';
const navigation = [
    { name: 'Notas', href: '/notas', current: false },
    { name: 'Perfil', href: '/perfil', current: false },
];
function classNames(...classes) {
    return classes.filter(Boolean).join(' ');
}
export default function Example() {
    return (_jsxs(Disclosure, { as: "nav", className: "bg-gray-800", children: [_jsx("div", { className: "mx-auto max-w-7xl px-2 sm:px-6 lg:px-8", children: _jsxs("div", { className: "relative flex h-16 items-center justify-between", children: [_jsx("div", { className: "absolute inset-y-0 left-0 flex items-center sm:hidden", children: _jsxs(DisclosureButton, { className: "group relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white", children: [_jsx("span", { className: "absolute -inset-0.5" }), _jsx("span", { className: "sr-only", children: "Open main menu" }), _jsx(Bars3Icon, { "aria-hidden": "true", className: "block h-6 w-6 group-data-[open]:hidden" }), _jsx(XMarkIcon, { "aria-hidden": "true", className: "hidden h-6 w-6 group-data-[open]:block" })] }) }), _jsxs("div", { className: "flex flex-1 items-center justify-center sm:items-stretch sm:justify-start", children: [_jsx("div", { className: "flex flex-shrink-0 items-center", children: _jsx("p", { className: 'text-white', children: "Tus notas" }) }), _jsx("div", { className: "hidden sm:ml-6 sm:block", children: _jsx("div", { className: "flex space-x-4", children: navigation.map((item) => (_jsx("a", { href: item.href, "aria-current": item.current ? 'page' : undefined, className: classNames(item.current
                                                ? 'bg-gray-900 text-white'
                                                : 'text-gray-300 hover:bg-gray-700 hover:text-white', 'rounded-md px-3 py-2 text-sm font-medium'), children: item.name }, item.name))) }) })] }), _jsx("div", { className: "absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0", children: _jsx(Menu, { as: "div", className: "relative ml-3", children: _jsxs(MenuItems, { transition: true, className: "absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 transition focus:outline-none data-[closed]:scale-95 data-[closed]:transform data-[closed]:opacity-0 data-[enter]:duration-100 data-[leave]:duration-75 data-[enter]:ease-out data-[leave]:ease-in", children: [_jsx(MenuItem, { children: _jsx("a", { href: "#", className: "block px-4 py-2 text-sm text-gray-700 data-[focus]:bg-gray-100", children: "Your Profile" }) }), _jsx(MenuItem, { children: _jsx("a", { href: "#", className: "block px-4 py-2 text-sm text-gray-700 data-[focus]:bg-gray-100", children: "Settings" }) }), _jsx(MenuItem, { children: _jsx("a", { href: "#", className: "block px-4 py-2 text-sm text-gray-700 data-[focus]:bg-gray-100", children: "Sign out" }) })] }) }) })] }) }), _jsx(DisclosurePanel, { className: "sm:hidden", children: _jsx("div", { className: "space-y-1 px-2 pb-3 pt-2", children: navigation.map((item) => (_jsx(DisclosureButton, { as: "a", href: item.href, "aria-current": item.current ? 'page' : undefined, className: classNames(item.current
                            ? 'bg-gray-900 text-white'
                            : 'text-gray-300 hover:bg-gray-700 hover:text-white', 'block rounded-md px-3 py-2 text-base font-medium'), children: item.name }, item.name))) }) })] }));
}
